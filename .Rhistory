"  Vote For 1"  ,
"                                               TOTAL    VOTE %   Election Absentee    Early" ,
"                                                                     Day             Voting" ,
"Donald J. Trump /Michael R. Pence              157     33.12%       23        19     115"  ,
"Joseph R. Biden /Kamala D. Harris              307     64.77%      30        54      223"  ,
"Jo Jorgensen /Jeremy \"Spike\" Cohen               7      1.48%       0         2        5"  ,
"Howie Hawkins /Angela Walker                     3      0.63%       0         0        3"  ,
"Write-In Totals                                  0      0.00%       0         0        0"  ,
"Total Votes Cast                               474     100.00%     53        75      346" ,
"  Overvotes                                      0                  0         0        0" ,
"  Undervotes                                     1                  0         0        1" ,
"",
"" ,
"  United States Senator",
"  Vote For 1"  ,
"                                               TOTAL    VOTE %   Election Absentee    Early",
"                                                                     Day             Voting" ,
"John Cornyn                                    173     37.12%       24        20     129" ,
"Mary \"MJ\" Hegar                                283     60.73%      27        54      202" ,
"Kerry Douglas McKennon                           5      1.07%       0         0        5"  ,
"David B. Collins                                 5      1.07%       1         0        4" ,
"Write-In Totals                                  0      0.00%       0         0        0" ,
"Total Votes Cast                               466     100.00%     52        74      340" ,
"  Overvotes                                      0                  0         0        0" ,
"  Undervotes                                     9                  1         1        7" ,
"" ,
"" ,
) %>% as.data.frame()
sample_lines
expected_first_values <- dplyr::tribble(
~lines, ~precinct, ~office,
"1001", "1001", NA,
"  President and Vice President", NA, "President and Vice President"  ,
"Donald J. Trump /Michael R. Pence              107     19.85%       14        10      83", NA, NA,
"Joseph R. Biden /Kamala D. Harris              420     77.92%      24        75      321",  NA, NA,
"Jo Jorgensen /Jeremy \"Spike\" Cohen               9      1.67%       0         0        9",  NA, NA,
"Howie Hawkins /Angela Walker                     2      0.37%       1         0        1",   NA, NA,
"Write-In Totals                                  1      0.19%       0         0        1",  NA, NA,
"Total Votes Cast                               539     100.00%     39        85      415",  NA, NA,
"  Overvotes                                      0                  0         0        0", NA, NA,
"  Undervotes                                     4                  0         2        2",  NA, NA,
"  United States Senator" ,   NA, "United States Senator",
"John Cornyn                                    123     23.08%       13        14      96" ,  NA, NA,
"Mary \"MJ\" Hegar                                396     74.30%      23        71      302",    NA, NA,
"Kerry Douglas McKennon                          10      1.88%       0         0       10" ,   NA, NA,
"David B. Collins                                 4      0.75%       1         0        3",   NA, NA,
"Write-In Totals                                  0      0.00%       0         0        0" , NA, NA,
"Total Votes Cast                               533     100.00%     37        85      411" ,  NA, NA,
"  Overvotes                                      0                  0         0        0" ,   NA, NA,
"  Undervotes                                    10                  2         2        6" ,  NA, NA,
"1002" ,    "1002", NA,
"  President and Vice President"     ,     NA, "President and Vice President",
"Donald J. Trump /Michael R. Pence              157     33.12%       23        19     115"  ,  NA, NA,
"Joseph R. Biden /Kamala D. Harris              307     64.77%      30        54      223"  ,  NA, NA,
"Jo Jorgensen /Jeremy \"Spike\" Cohen               7      1.48%       0         2        5"  , NA, NA,
"Howie Hawkins /Angela Walker                     3      0.63%       0         0        3"  ,  NA, NA,
"Write-In Totals                                  0      0.00%       0         0        0"  , NA, NA,
"Total Votes Cast                               474     100.00%     53        75      346" ,  NA, NA,
"  Overvotes                                      0                  0         0        0" ,  NA, NA,
"  Undervotes                                     1                  0         0        1" ,   NA, NA,
"  United States Senator",     NA, "United States Senator",
"John Cornyn                                    173     37.12%       24        20     129" ,   NA, NA,
"Mary \"MJ\" Hegar                                283     60.73%      27        54      202" ,  NA, NA,
"Kerry Douglas McKennon                           5      1.07%       0         0        5"  ,  NA, NA,
"David B. Collins                                 5      1.07%       1         0        4" ,  NA, NA,
"Write-In Totals                                  0      0.00%       0         0        0" ,  NA, NA,
"Total Votes Cast                               466     100.00%     52        74      340" ,  NA, NA,
"  Overvotes                                      0                  0         0        0" ,  NA, NA,
"  Undervotes                                     9                  1         1        7" ,  NA, NA,
) %>% as.data.frame()
expected_first_values
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
report$lines_df <- report$create_lines_df()
full_df <- report$get_full_df_from_lines(report$lines_df)
head(lines_df)
head(report$lines_df)
rm(list=ls())
source('code/election_report_classes/initialize_election_report_classes.R')
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
elections_metadata
elections_metadata[3,]
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
rm(list=ls())
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
report$lines_df <- report$create_lines_df()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
full_df <- report$get_full_df_from_lines(lines_df)
head(full_df)
all_offices <- full_df %>%
select(office) %>%
unique() %>%
arrange(office)
all_offices
report <- election_report_factory$create_election_report_object(elections_metadata[1,])
report$retreive_data()
lines_df <- report$create_lines_df()
full_df <- report$get_full_df_from_lines(lines_df)
full_df
rm(list=ls())
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[1,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
full_df_init <- report$get_full_df_from_lines(lines_df)
full_df_final <- report$finalize_full_df(full_df_init)
rm(list=ls())
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[1,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
full_df_init <- report$get_full_df_from_lines(lines_df)
full_df_final <- report$finalize_full_df(full_df_init)
full_df_final
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
full_df_init <- report$get_full_df_from_lines(lines_df)
full_df_final <- report$finalize_full_df(full_df_init)
head(full_df_final)
full_df_final %>% select(office) %>% unique() %>% arrange(office)
source('code/election_report_classes/initialize_election_report_classes.R')
rm(list=ls())
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# Create 1-column dataframe where each row is a line of text in the report
lines_df <- report$create_lines_df()
full_df_init <- report$get_full_df_from_lines(lines_df)
full_df_final <- report$finalize_full_df(full_df_init)
full_df_final %>%
select(office) %>%
unique() %>%
arrange(office)
a <- list()
a.append(1)
?list.append
??list.append
a <- append(a, data.frame())
a
x <- data.frame()
a <- append(a, x)
a
a <- append(a, lines_df)
a
str(full_df_final)
a <- as.data.frame(matrix(nrow = 0, ncol = 1))
a
a <- as.data.frame(matrix(nrow = 0, ncol = 8))
colnames(a) <- c('precinct', 'office', 'candidate', 'votes', 'election_county', 'election_date', 'election_type', 'election_description')
a
a <- rbind(a, full_df_final)
head(a)
get_all_election_reports <- function(meta_df) {
# Empty data frame that each election report will be inserted into
combined_df <- as.data.frame(matrix(nrow = 0, ncol = 8))
colnames(combined_df) <- c('precinct', 'office', 'candidate', 'votes', 'election_county', 'election_date', 'election_type', 'election_description')
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
for(i in 1:length(meta_df)) {
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# full election report with vote totals for each candidate at the precinct level
full_df <- report$create_lines_df() %>%  # 1-column dataframe where each row is a line of text in the report
report$get_full_df_from_lines() %>%
report$finalize_full_df()
combined_df <- rbind(combined_df, full_df)
rm(report)
rm(full_df)
}
return(combined_df)
}
rm(list=ls())
# Read in ElectionReport classes and factory
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
get_all_election_reports <- function(meta_df) {
# Empty data frame that each election report will be inserted into
combined_df <- as.data.frame(matrix(nrow = 0, ncol = 8))
colnames(combined_df) <- c('precinct', 'office', 'candidate', 'votes', 'election_county', 'election_date', 'election_type', 'election_description')
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
for(i in 1:length(meta_df)) {
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# full election report with vote totals for each candidate at the precinct level
full_df <- report$create_lines_df() %>%  # 1-column dataframe where each row is a line of text in the report
report$get_full_df_from_lines() %>%
report$finalize_full_df()
combined_df <- rbind(combined_df, full_df)
rm(report)
rm(full_df)
}
return(combined_df)
}
all_elections <- get_all_election_reports(elections_metadata)
head(all_elections)
all_elections <- get_all_election_reports(elections_metadata)
# Read in ElectionReport classes and factory
source('code/election_report_classes/initialize_election_report_classes.R')
# Get manually created dataset with report URLs and other election data
elections_metadata <- get_elections_metadata() %>%
top_n(3) # TEMPORARY STEP: Selecting a few recent elections to populate while this project is in development
get_all_election_reports <- function(meta_df) {
# Empty data frame that each election report will be inserted into
combined_df <- as.data.frame(matrix(nrow = 0, ncol = 8))
colnames(combined_df) <- c('precinct', 'office', 'candidate', 'votes', 'election_county', 'election_date', 'election_type', 'election_description')
# Factory to create appropriate ElectionReport object based on metadata
election_report_factory <- ElectionReportFactory$new()
for(i in 1:nrow(meta_df)) {
# Create ElectionReport object for a single election
report <- election_report_factory$create_election_report_object(elections_metadata[3,])
# Download precinct-level file from Bexar County Elections website
report$retreive_data()
# full election report with vote totals for each candidate at the precinct level
full_df <- report$create_lines_df() %>%  # 1-column dataframe where each row is a line of text in the report
report$get_full_df_from_lines() %>%
report$finalize_full_df()
combined_df <- rbind(combined_df, full_df)
rm(report)
rm(full_df)
}
return(combined_df)
}
all_elections <- get_all_election_reports(elections_metadata)
head(all_elections)
all_elections %>% select(office) %>% unique() %>% arrange(office)
special_election <- read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv')
getwd()
special_election <- read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv')
special_election
special_election <- read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv') %>%
rename(
ï..precinct = precinct
)
special_election <- read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv') %>%
rename(
precinct = ï..precinct
)
special_election
as.matrix(special_election)
?t
t(as.matrix(special_election))
special_colnames <- c('precinct', 'Steve Huerta', 'Fred A. Rangel', 'Ray Lopez', 'Coda Rayo Garza', 'Arthur "Art" Reyna')
rm(special_election)
special_csv <- read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv')
new_special <- as.data.frame(matrix(nrow = 0, ncol = 3))
colnames(new_special) <- c('precinct', 'candidate', 'votes')
special_colnames[3]
get_empty_df <- function() {
new_df <- as.data.frame(matrix(nrow = 0, ncol = 3))
colnames(new_df) <- c('precinct', 'candidate', 'votes')
return(new_df)
}
new_special <- get_empty_df()
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df()
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
rbind(new_special, temp_df)
}
}
get_empty_df <- function(rows) {
new_df <- as.data.frame(matrix(nrow = rows, ncol = 3))
colnames(new_df) <- c('precinct', 'candidate', 'votes')
return(new_df)
}
new_special <- get_empty_df(0)
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df(1)
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
rbind(new_special, temp_df)
}
}
new_special
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df(1)
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
new_special <- rbind(new_special, temp_df)
}
}
new_special
get_elections_metadata()
special_metadata <- elections_metadata[7:8]
special_metadata <- elections_metadata[7:8,]
special_metadata
special_metadata <- get_elections_metadata()[7:8,]
special_metadata
special_metadata['file'] <- c('Special St Rep 125 Runoff Election March-12-2019','data/manually_created/Special St Rep 125 Election February-12-2019 results.csv')
special_metadata
special_metadata <- get_elections_metadata() %>%
filter(stringr::str_detect(description, 'District 125')) %>%
arrange(date)
special_metadate
special_metadata
special_metadata <- get_elections_metadata() %>%
filter(stringr::str_detect(description, 'District 125')) %>%
arrange(date)
special_metadata['file'] <- c(
'data/manually_created/Special St Rep 125 Election February-12-2019 results.csv',
'data/manually_created/Special St Rep 125 Runoff Election March-12-2019.csv'
)
special_metadata
str(all_elections)
all_elections %>% select(office) %>% unique() %>% arrange(office)
str(elections_metadata)
get_empty_df <- function(rows) {
new_df <- as.data.frame(matrix(nrow = rows, ncol = 3))
colnames(new_df) <- c('precinct', 'candidate', 'votes')
return(new_df)
}
get_single_special_dataset <- function(metadata_row) {
special_csv <- read.csv(metadata_row$file)
special_colnames <- c('precinct', 'Steve Huerta', 'Fred A. Rangel', 'Ray Lopez', 'Coda Rayo Garza', 'Arthur "Art" Reyna')
new_special <- get_empty_df(0)
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df(1)
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
new_special <- rbind(new_special, temp_df)
}
}
new_special$office <- 'State Representative, District 125'
new_special$election_county <- metadata_row$county
new_special$election_date <- metadata_row$date
new_special$election_type <- metadata_row$election_type
new_special$election_description <- metadata_row$description
return(new_special)
}
special_df <- get_single_special_dataset(special_metadata[1,])
special_df
str(all_elections)
get_single_special_dataset <- function(metadata_row) {
special_csv <- read.csv(metadata_row$file)
special_colnames <- c('precinct', 'Steve Huerta', 'Fred A. Rangel', 'Ray Lopez', 'Coda Rayo Garza', 'Arthur "Art" Reyna')
new_special <- get_empty_df(0)
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df(1)
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
new_special <- rbind(new_special, temp_df)
}
}
new_special$office <- 'State Representative, District 125'
new_special$election_county <- metadata_row$county
new_special$election_date <- metadata_row$date
new_special$election_type <- metadata_row$election_type
new_special$election_description <- metadata_row$description
return(new_special %>% select(
precinct,
office,
candidate,
votes,
election_county,
election_date,
election_type,
election_description
))
}
special_df <- get_single_special_dataset(special_metadata[1,])
special_df <- get_single_special_dataset(special_metadata[1,])
runoff_df <- get_single_special_dataset(special_metadata[2,])
runoff_df
read.csv(''data/manually_created/Special St Rep 125 Election February-12-2019 results.csv'')
read.csv('data/manually_created/Special St Rep 125 Election February-12-2019 results.csv')
special_metadata <- get_elections_metadata() %>%
filter(stringr::str_detect(description, 'District 125')) %>%
arrange(date)
special_metadata['file'] <- c(
'data/manually_created/Special St Rep 125 Election February-12-2019 results.csv',
'data/manually_created/Special St Rep 125 Runoff Election March-12-2019.csv'
)
get_empty_df <- function(rows) {
new_df <- as.data.frame(matrix(nrow = rows, ncol = 3))
colnames(new_df) <- c('precinct', 'candidate', 'votes')
return(new_df)
}
clean_special_column_names <- function(col_names) {
clean_names <- col_names %>%
str_replace('ï..precinct', 'precinct') %>%
str_replace('Steve.Huerta', 'Steve Huerta') %>%
str_replace('Fred.A..Rangel', 'Fred A. Rangel') %>%
str_replace('Ray.Lopez', 'Ray Lopez') %>%
str_replace('Coda.Rayo.Garza', 'Coda Rayo Garza') %>%
str_replace('Arthur..Art..Reyna', 'Arthur "Art" Reyna')
return(clean_names)
}
get_single_special_dataset <- function(metadata_row) {
special_csv <- read.csv(metadata_row$file)
special_colnames <- clean_special_column_names(colnames(special_csv))
new_special <- get_empty_df(0)
for(row_index in 1:nrow(special_csv)) {
for(col_index in 2:ncol(special_csv)) {
temp_df <- get_empty_df(1)
temp_df$precinct <- special_csv[row_index, 1]
temp_df$candidate <- special_colnames[col_index]
temp_df$votes <- special_csv[row_index, col_index]
new_special <- rbind(new_special, temp_df)
}
}
new_special$office <- 'State Representative, District 125'
new_special$election_county <- metadata_row$county
new_special$election_date <- metadata_row$date
new_special$election_type <- metadata_row$election_type
new_special$election_description <- metadata_row$description
return(new_special %>% select(
precinct,
office,
candidate,
votes,
election_county,
election_date,
election_type,
election_description
))
}
special_df <- get_single_special_dataset(special_metadata[1,])
runoff_df <- get_single_special_dataset(special_metadata[2,])
special_df
runoff_df
full_special_df <- rbind(special_df, runoff_df)
get_full_special_df <- function() {
special_metadata <- get_elections_metadata() %>%
filter(stringr::str_detect(description, 'District 125')) %>%
arrange(date)
special_metadata['file'] <- c(
'data/manually_created/Special St Rep 125 Election February-12-2019 results.csv',
'data/manually_created/Special St Rep 125 Runoff Election March-12-2019.csv'
)
special_df <- get_single_special_dataset(special_metadata[1,])
runoff_df <- get_single_special_dataset(special_metadata[2,])
return(rbind(special_df, runoff_df))
}
full_special_df <- get_full_special_df()
full_special_df
# Read in district 125 special elections from .csv files
source('code/adhocs_and_manual_steps/get_125_special_elections.R')
special_elections <- get_full_special_df()
all_elections <- rbind(all_elections, special_elections)
write.csv(all_elections, 'data/all_elections.csv')
all_elections %>% select(election_date) %>% unique()
